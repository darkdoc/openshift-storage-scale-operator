- Figure out in which namespace the operator should be installed (don't think using the default 'openshift-operators' is best practice these days)
  - The main question is "Is this a namespaced operator or a cluster-wide operator"?
- Create spectrum cluster object with some sane worker label default (if there are no nodes with the label, exposed via CRD, then do nothing)
- Make sure that the operator is disconnected and fips compliant
- Can we export IBM GPFS stuff through events from the start or performance metrics through the native openshift bits?
- In the UI add that warning that you must create the PurpleStorage singleton object
  - Creation webhook is DONE
  - UI bits still missing
- Think of what fields will be immutable in our CR (list of cluster nodes maybe?)
  - For now we made the IBM Version immutable. Making it unmutable will depend on the upgrade story
- Get to 100% unit testing
- In the filesystem yaml can you pick disks via a label?
- move the yaml resources to an external dir (assets) from golang code (better maintainability?) see https://github.com/openshift/local-storage-operator/blob/fac0f724c984f6d1ca3948236438244c6ce36915/pkg/controllers/localvolumediscovery/localvolumediscovery_controller.go#L159
- For now we wait for the "worker" mcp to return a condition type updated and status frue. Because otherwise the IBM cluster deployments starts pods that the MCP is unable to evict and everything gets stuck. We need to make sure this is the proper approach (barring the long-term KMM solution to avoid having MachineConfigs in the first place)

[DONE]
- Rewrite create-rbacs.sh in golang and add some unit tests/validation as it will become more important in the future
- For the MachineConfig bits do we want to drop all these modules and just render a yaml template and use manifestival?
- Add pull secret in the build directly (if present)
- Lookup the openshift clusterversion and check it against the ibm spectrum version hash table (in admission webhook or also in the reconcile loop)
- Tweak our ansible scripts to use the operator
